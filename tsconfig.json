{
	"compilerOptions": {
		/* Basic Options */
		"target": "esnext", /* Set the ECMAScript target version */
		"module": "esnext", /* Specify module code generation */
		"lib": [
			"dom",
			"dom.iterable",
			"esnext"
		], /* Specify additional TypeScript library files */
		"jsx": "react", /* Specify the JSX transpilation option for React. */
		"allowJs": false, /* Disallow JavaScript files in the TypeScript project. */
		"allowSyntheticDefaultImports": true, /* Allow default imports from modules with no default export. */
		"skipLibCheck": true, /* Skip type checking of declaration files */
		"importHelpers": true,
		/* Strict Type-Checking Options */
		"resolveJsonModule": true, /* Enable importing JSON modules. */
		"strict": true, /* Enable all strict type-checking options */
		"strictNullChecks": true, /* Enable strict null checks */
		"strictFunctionTypes": true, /* Enable strict checking of function types */
		"strictPropertyInitialization": true, /* Enable strict checking of property initialization */
		"esModuleInterop": true, /* Enable compatibility with CommonJS modules */
		"forceConsistentCasingInFileNames": true, /* Ensure consistent file casing */
		"isolatedModules": true, /* Ensure that each file is treated as a separate module. */
		"noImplicitAny": true, /* Raise error on expressions and declarations with an implied 'any' type */
		"noImplicitThis": true, /* Raise error on 'this' expressions with an implied 'any' type */
		"noUnusedLocals": true, /* Raise error on unused locals */
		"noUnusedParameters": true, /* Raise error on unused parameters */
		"noImplicitReturns": true, /* Raise error when not all code paths return a value */
		"noFallthroughCasesInSwitch": true, /* Raise error on fallthrough cases in switch statements */
		"noEmit": true, /* Disable emitting compiled output files */
		"types": [
			"react",
			"react-dom"
		], /* specifies the TypeScript declaration files for React and React DOM. */
		"typeRoots": [
			"./src/@types", /* Custom type declarations directory */
			"./node_modules/@types" /* Default type declarations directory */
		],
		/* Module Resolution Options */
		"moduleResolution": "node", /* Specify the module resolution strategy as "node". */
		"baseUrl": "./src/", /* Base directory to resolve non-relative module names */
		"paths": {
			"@src/*": [
				"src/*"
			],
			"@assets/*": [
				"assets/*"
			]
		}, /* Define path aliases for absolute imports starting from the 'src' directory. */
		/* Experimental Options */
		"experimentalDecorators": true, /* Enable support for experimental decorators */
		"emitDecoratorMetadata": true, /* Emit design-type metadata for decorated declarations */
		/* Additional Options */
		"outDir": "./dist", /* Specify output directory for compiled files */
		"sourceMap": true, /* Generate corresponding .map file */
		"rootDir": "./src", /* Specify the root directory of input files */
	},
	"include": [
		"src/**/*"
	], /* Specify files to include in compilation */
	"exclude": [
		"node_modules",
		"build",
		"dist"
	], /* Specify files to exclude from compilation */
	"references": [
		{
			"path": "./tsconfig.node.json"
		}
	],
}